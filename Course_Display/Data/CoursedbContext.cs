// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.ComponentModel.DataAnnotations.Schema;
using DynamicModelDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Course_Display.Data
{
    /// <summary>
    /// The partial <c>CoursedbContext</c> class.
    /// Contains a DBSet for each table in the database.
    /// <list type="bullet">
    /// <item>
    /// <term>OnConfiguring</term>
    /// <description>Override method for configuring the database</description>
    /// </item>
    /// <item>
    /// <term>OnModelCreating</term>
    /// <description>Override method for further configuring the model</description>
    /// </item>
    /// </list>
    /// </summary>
    public partial class CoursedbContext : DbContext
    {
        public CoursedbContext()
        {
        }

        public CoursedbContext(DbContextOptions<CoursedbContext> options)
            : base(options)
        {
        }
        /// <value>Gets the string to determine which table to add to.</value>

        public string CourseList { get; set; }
        /// <value>Gets the DBSet for the CISTList table in the database.</value>
        public virtual DbSet<Course> CISTList { get; set; }

        /// <value>Gets the DBSet for the CoreCourses table in the database.</value>
        public virtual DbSet<ReqCourse> CoreCourses { get; set; }

        /// <value>Gets the DBSet for the CoreExtension table in the database.</value>
        public virtual DbSet<ReqCourse> CoreExtension { get; set; }

        /// <value>Gets the DBSet for the CSCIList table in the database.</value>
        public virtual DbSet<Course> CSCIList { get; set; }

        /// <value>Gets the DBSet for the CYBRList table in the database.</value>
        public virtual DbSet<Course> CYBRList { get; set; }

        /// <value>Gets the DBSet for the MATHList table in the database.</value>
        public virtual DbSet<Course> MATHList { get; set; }

        /// <value>Gets the DBSet for the UpperDivision table in the database.</value>
        public virtual DbSet<ReqCourse> UpperDivision { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
            => optionsBuilder
                .UseSqlServer("Data Source=database-1.cinez0pdciee.us-east-2.rds.amazonaws.com,1433;Initial Catalog=CourseDB;User ID=admin;Password=**OrigamiTigerKing**")
                .ReplaceService<Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory, CacheKeyFactory>();
        

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Course>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__CISTList__9526E276BFF2B672");

                entity.ToTable(CourseList);

                entity.Property(e => e.CourseName).HasMaxLength(50);

                entity.Property(e => e.Prereqs).HasMaxLength(300);
            });

            modelBuilder.Entity<ReqCourse>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__CoreCour__9526E27698664223");

                entity.Property(e => e.CourseName).HasMaxLength(50);
            });

            modelBuilder.Entity<ReqCourse>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__CoreExte__9526E276B5899F38");

                entity.Property(e => e.CourseName).HasMaxLength(50);
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__Table__9526E27677206980");

                entity.ToTable(CourseList);

                entity.Property(e => e.CourseName).HasMaxLength(50);

                entity.Property(e => e.Prereqs).HasMaxLength(300);
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__CYBRList__9526E2761FD29BBC");

                entity.ToTable(CourseList);

                entity.Property(e => e.CourseName).HasMaxLength(50);

                entity.Property(e => e.Prereqs).HasMaxLength(300);
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__MATHList__9526E27627CFB7BB");

                entity.ToTable(CourseList);

                entity.Property(e => e.CourseName).HasMaxLength(50);

                entity.Property(e => e.Prereqs).HasMaxLength(300);
            });

            modelBuilder.Entity<ReqCourse>(entity =>
            {
                entity.HasKey(e => e.CourseName)
                    .HasName("PK__UpperDiv__9526E2769C815BF0");

                entity.Property(e => e.CourseName).HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}