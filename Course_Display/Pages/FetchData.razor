@page "/fetchdata"

@using Course_Display.Data;
@using CsvHelper;
@using System.IO;
@using System.Globalization;
@inject DBService dbService

<h1>Fetch Data</h1>


@if (currentCourse == null)
{
    <p><em>Loading...</em></p>
}
else
{
    foreach (Course c in PrereqList)
    {
        <ClassComponent course="c" classList="classList"></ClassComponent>
    }
    <table class="table">
        <thead>
            <tr>
                <th>Course Name</th>
                <th>Credit Hours</th>
                <th>Prereqs</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@currentCourse.CourseName</td>
                <td>@currentCourse.CreditHours</td>
                <!-- <td>@returnPrereqs(currentCourse.Prereqs).ToString()</td> -->
            </tr>
        </tbody>
    </table>
}

<br />
<br />

<input type="text" @bind="courseName" />
<br />
<br />
<button @onclick="(async ()=> await getCourse(courseName))">Get Course</button>

@code {
    public Course currentCourse;
    public string courseName = "";
    public IEnumerable<ReqCourse> ReqCoreList;
    public List<Course> NoPrereqList = new List<Course>();
    public List<Course> PrereqList = new List<Course>();
    public List<string> classList = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        var csvFile = "RequiredTest";

        var reader = new StreamReader(@"Files/" + csvFile + ".csv");
        var csv = new CsvReader(reader, CultureInfo.InvariantCulture);
        ReqCoreList = csv.GetRecords<ReqCourse>();
        foreach (ReqCourse req in ReqCoreList)
        {
            Course tempCourse = new Course();
            string className = req.CourseName;
            tempCourse = await getCourse(className);
            PrereqList.Add(tempCourse);
            if (tempCourse.Prereqs == null || tempCourse.Prereqs == "")
            {
                NoPrereqList.Add(tempCourse);
            }
        }
        reader.Close();
        csv.Dispose();

        csvFile = "classListTest";

        reader = new StreamReader(@"Files/" + csvFile + ".csv");
        csv = new CsvReader(reader, CultureInfo.InvariantCulture);
        ReqCoreList = csv.GetRecords<ReqCourse>();
        foreach (ReqCourse req in ReqCoreList)
        {
            Course tempCourse = new Course();
            string className = req.CourseName;
            tempCourse = await getCourse(className);
            classList.Add(tempCourse.CourseName);
        }
        reader.Close();
        csv.Dispose();
        courseName = "";
    }

    // Given a course name as a string
    // Populates the currentCourse object with the values belonging to that course
    public async Task<Course> getCourse(string className)
    {
        currentCourse = await dbService.GetCourseAsync(className);
        base.StateHasChanged();
        return currentCourse;
        //dbService.Testing("CSCI300");
    }


}
